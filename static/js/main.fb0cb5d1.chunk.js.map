{"version":3,"sources":["SearchByPin.js","SearchByDistrict.js","TabView.js","App.js","index.js"],"names":["SearchByPin","props","state","error","isLoaded","items","value","count","getCurrentDate","newDate","Date","date","getDate","month","getMonth","year","getFullYear","pin","dfetch","fetch","then","json","pind","setState","sessions","handleChange","bind","searchPin","this","event","a","target","console","log","message","TextField","id","label","type","variant","onChange","style","marginTop","Button","marginBottom","color","onClick","undefined","length","width","map","item","name","address","from","to","fee_type","fee","min_age_limit","available_capacity","available_capacity_dose1","available_capacity_dose2","vaccine","Component","SearchByDistrict","merror","misLoaded","disIsLoaded","distr","res","sValue","dValue","statefetch","states","distfetch","stateid","dis","district","districts","sessfetch","sess","result","getID","stateHandleChange","searchDist","districtHandleChange","current_state","distID","rows","col1","col2","col3","col4","col5","col6","FormControl","minWidth","InputLabel","htmlFor","Select","native","state_id","state_name","district_id","district_name","TabPanel","children","index","other","role","hidden","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","SimpleTabs","classes","React","useState","setValue","className","AppBar","position","Tabs","newValue","Tab","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb0cb5d1.chunk.js","sourcesContent":["import { Divider } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport './table.css';\r\n\r\n\r\n\r\nclass SearchByPin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          items: [],\r\n          value: '',\r\n          count: 0,\r\n\r\n        getCurrentDate: ()=>{\r\n\r\n            let newDate = new Date()\r\n            let date = newDate.getDate();\r\n            let month = newDate.getMonth() + 1;\r\n            let year = newDate.getFullYear();\r\n            \r\n            return `${date}-${month<10?`0${month}`:`${month}`}-${year}` \r\n            },\r\n\r\n        pin: ()=>{\r\n            if(this.state.value){\r\n                return this.state.value\r\n            }\r\n            else{\r\n                return '500021'\r\n            }\r\n        },\r\n\r\n        dfetch: ()=>{\r\n\r\n            fetch(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=${this.state.pin()}&date=${this.state.getCurrentDate()}`) \r\n            .then(pin => pin.json())\r\n            .then(pind =>{\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: pind.sessions\r\n                    \r\n                })\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                isLoaded: true,\r\n                error\r\n                })\r\n            })\r\n    \r\n          }\r\n\r\n          }\r\n\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.searchPin = this.searchPin.bind(this);\r\n      }\r\n\r\n     \r\n\r\n\r\n    componentDidMount(){\r\n\r\n        this.state.dfetch()\r\n\r\n        // if(this.state.value!==null){\r\n        // this.setState({Dfetch: ()=>\r\n\r\n                \r\n\r\n                // fetch(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=${this.state.pin()}&date=${this.state.getCurrentDate()}`) \r\n                // .then(pin => pin.json())\r\n                // .then(pind =>{\r\n                //     this.setState({\r\n                //         isLoaded: true,\r\n                //         items: pind.sessions\r\n                //     })\r\n                // },\r\n                // (error) => {\r\n                //     this.setState({\r\n                //     isLoaded: true,\r\n                //     error\r\n                //     })\r\n                // })\r\n        \r\n            // })\r\n    }\r\n\r\n    async handleChange(event) {\r\n        \r\n        await this.setState({value: event.target.value})\r\n        console.log(this.state.value)\r\n      }\r\n\r\n      \r\n      searchPin(){\r\n\r\n        console.log(\"Ostundi\") \r\n        this.setState({count: 1})\r\n        \r\n\r\n        this.state.dfetch();\r\n       \r\n        /*fetch(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=${this.state.pin()}&date=${this.state.getCurrentDate()}`) \r\n                .then(pin => pin.json())\r\n                .then(pind =>{\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: pind.sessions\r\n                    })\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                    })\r\n                })*/\r\n\r\n        \r\n      }\r\n\r\n    \r\n      \r\n   \r\n    \r\n\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n          } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n          }else{\r\n              console.log(this.state.value)\r\n                return (\r\n                    <div>\r\n                        <TextField id=\"filled-search\" label=\"Enter Pincode\" type=\"search\" variant=\"outlined\" value={this.state.value} onChange={this.handleChange} />\r\n                        <div style={{marginTop:'15px'}}>\r\n                        <Button style={{marginBottom:'20px'}} variant=\"contained\" color=\"primary\" onClick={this.searchPin}>Search</Button>\r\n                        </div>\r\n                        <div>{(items===undefined) ? <div>Enter valid pin</div> : \r\n                        ((items.length===0 && this.state.value === '' ) ? <div>  </div> : \r\n                        (items.length===0 && this.state.count===1 ) ? <div> No Vaccination slots available please come back later </div> : \r\n                        <table style={{width:'100%'}}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        Center Name\r\n                                    </th>\r\n                                    <th>\r\n                                        Address\r\n                                    </th>\r\n                                    <th>\r\n                                        From - To\r\n                                    </th>\r\n                                    <th>\r\n                                        FeeType | Fee | Min Age\r\n                                    </th>\r\n                                    <th>\r\n                                        Available | Dose1 | Dose2\r\n                                    </th>\r\n                                    <th>\r\n                                        Vaccine\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    items.map(item=>(\r\n                                        <tr>\r\n                                            <td>\r\n                                                {item.name}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.address}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.from} - {item.to}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.fee_type} | {item.fee} | {item.min_age_limit}+\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.available_capacity} | {item.available_capacity_dose1} | {item.available_capacity_dose2}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.vaccine}\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    ))\r\n                                    \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                        \r\n                        ) }</div>\r\n                    </div>\r\n                )\r\n                }\r\n\r\n\r\n                // else{\r\n                //     console.log(\"defined \" + items.isLoaded)\r\n                //     return(\r\n                //         <div>\r\n                //             <div>\r\n                //             <TextField id=\"filled-search\" label=\"Enter Pincode\" type=\"search\" variant=\"outlined\" value={this.state.value} onChange={this.handleChange} />\r\n                //             <div style={{marginTop:'15px'}}>\r\n                //             <Button style={{marginBottom:'20px'}} variant=\"contained\" color=\"primary\" onClick={this.searchPin}>Search</Button>\r\n                //             </div>\r\n                //             </div>\r\n                            \r\n                            \r\n\r\n                //             <div>\r\n                //             {items.map(item=>(\r\n                //             <div style={{marginBottom:'20px'}}>\r\n                //                 <div>Center Name: {item.name}</div>\r\n                //                 <div>Address: {item.address}</div>\r\n                //                 <div>{item.vaccine}: {item.fee}</div>\r\n                //             </div>\r\n                //             ))} \r\n                //             </div>\r\n\r\n                //         </div>\r\n\r\n                        \r\n                            \r\n\r\n                //     )\r\n                // }\r\n    }\r\n    // updateInputValue(evt) {\r\n    //     this.setState({\r\n    //       value: evt.target.value\r\n    //     });\r\n        \r\n    //   }\r\n\r\n      \r\n}\r\n\r\nexport default SearchByPin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function SearchByPin(){\r\n\r\n//     componentDidMount(){\r\n//         fetch(\"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=500062&date=21-07-2021\")\r\n//     }\r\n\r\n// return (\r\n//     <div>\r\n//         <TextField id=\"filled-search\" label=\"Enter Pincode\" type=\"search\" variant=\"outlined\" />\r\n//         <div style={{marginTop:'15px'}}>\r\n//         <Button variant=\"contained\" color=\"primary\">Search</Button>\r\n//         </div>\r\n//     </div>\r\n// )\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n","import Select from '@material-ui/core/Select';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n// import FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { Button } from '@material-ui/core';\r\nimport React, { Component } from 'react'\r\n// import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom/cjs/react-dom.development';\r\nimport { DataGrid, RowsProp, ColDef } from \"@material-ui/data-grid\";\r\nimport './table.css';\r\n\r\n\r\n\r\nclass SearchByDistrict extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            error: null,\r\n            merror: null,\r\n            isLoaded: false,\r\n            misLoaded: false,\r\n            disIsLoaded: false,\r\n            items: [],\r\n            distr: [],\r\n            res:[],\r\n            sValue: '',\r\n            dValue: '',\r\n            id: 1,\r\n\r\n            getCurrentDate: ()=>{\r\n\r\n                let newDate = new Date()\r\n                let date = newDate.getDate();\r\n                let month = newDate.getMonth() + 1;\r\n                let year = newDate.getFullYear();\r\n                \r\n                return `${date}-${month<10?`0${month}`:`${month}`}-${year}` \r\n                },\r\n\r\n            statefetch: ()=>{\r\n\r\n                fetch(`https://cdn-api.co-vin.in/api/v2/admin/location/states`) \r\n                .then(pin => pin.json())\r\n                .then(pind =>{\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: pind.states\r\n                    })\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                    })\r\n              })\r\n            },\r\n\r\n              distfetch: (stateid)=>{\r\n                  console.log(\"state ID\" + stateid)\r\n                  fetch(`https://cdn-api.co-vin.in/api/v2/admin/location/districts/${stateid}`)\r\n                  .then(dis => dis.json())\r\n                  .then(district =>{\r\n                      this.setState({\r\n                          disIsLoaded: true,\r\n                          distr: district.districts\r\n                      })\r\n                  },\r\n                  (error) => {\r\n                    this.setState({\r\n                    disIsLoaded: true,\r\n                    error\r\n                    })\r\n                })\r\n\r\n              },\r\n\r\n              sessfetch: ()=>{\r\n\r\n                fetch(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=${this.state.dValue}&date=${this.state.getCurrentDate()}`) \r\n                .then(sess => sess.json())\r\n                .then(result =>{\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        res: result.sessions\r\n                    })\r\n                },\r\n                (merror) => {\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    merror\r\n                    })\r\n                })\r\n        \r\n              },\r\n\r\n              getID: ()=>{\r\n                this.state.id += this.state.id\r\n                return this.state.id\r\n            }\r\n\r\n            //   districtHandleChange(event){\r\n            //     // console.log(\"dist change\")\r\n            //     const distID = event.target.value\r\n            //     console.log('DID' + distID)\r\n            //     return distID\r\n            //     // this.setState({\r\n            //     //     dValue: event.target.value})\r\n            //     // console.log(\"dist ID\" + this.state.dValue)\r\n        \r\n            // }\r\n\r\n\r\n\r\n\r\n\r\n             \r\n        }\r\n\r\n        this.stateHandleChange = this.stateHandleChange.bind(this)\r\n        this.searchDist = this.searchDist.bind(this)\r\n        this.districtHandleChange = this.districtHandleChange.bind(this)\r\n\r\n        \r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.state.statefetch()\r\n        \r\n    }\r\n\r\n    searchDist(){\r\n\r\n        this.state.sessfetch();\r\n        console.log(\"dvalue\" + this.state.dValue)\r\n    }\r\n\r\n    stateHandleChange(event) {\r\n\r\n        // this.setState({distr: []})        \r\n        let current_state= event.target.value\r\n        console.log(\"stateid\"+current_state)\r\n        this.state.distfetch(current_state)\r\n        \r\n        // console.log(\"state handle\"+current_state)\r\n    }\r\n    \r\n    async districtHandleChange(event){\r\n        // console.log(\"dist change\")\r\n        const distID = event.target.value\r\n        console.log('DID' + distID)\r\n        await this.setState((state, props) => ({\r\n            dValue: distID}))\r\n        console.log(\"dist ID\" + this.state.dValue)\r\n\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n    render() {\r\n\r\n        const { error, isLoaded, items, distr, res } = this.state;\r\n\r\n        const columns = [\r\n            { field: \"id\", headerName: \"ID\", width: 100 },\r\n            { field: \"col1\", headerName: \"Name\", width: 150 },\r\n            { field: \"col2\", headerName: \"Address\", width: 150 },\r\n            { field: \"col3\", headerName: \"From - To\", width: 150 },\r\n            { field: \"col4\", headerName: \"FeeType | Fee | Agelimit\" , width: 150 },\r\n            { field: \"col5\", headerName: \"Available capacity | Available dose1 | Available dose2\", width: 150 },\r\n            { field: \"col6\", headerName: \"Vaccine\", width: 150 },\r\n\r\n          ];\r\n\r\n\r\n          console.log(\"result\" + res.length)\r\n\r\n        \r\n        \r\n\r\n        const rows = res.map((item) => [\r\n            {\r\n                id:this.state.getID(),\r\n                col1:item.name,\r\n                col2:item.address,\r\n                col3: [item.from, item.to],\r\n                col4: [item.fee_type, item.fee, item.min_age_limit],\r\n                col5: [item.available_capacity, item.available_capacity_dose1, item.available_capacity_dose2],\r\n                col6: item.vaccine\r\n\r\n            }\r\n        ])\r\n\r\n        console.log(\"value rows \" + rows.length)\r\n\r\n        // let rows = []\r\n\r\n        //   const rows=[\r\n        //         {id:1, col1:\"apollo\", col2:\"secunderabad\", col3:\"26-07-2021\", col4:18, col5:2009, col6:\"covaxin\"},\r\n        //         {id:2, col1:\"apollo\", col2:\"secunderabad\", col3:\"26-07-2021\", col4:18, col5:2009, col6:\"covaxin\"},\r\n        //         {id:3, col1:\"apollo\", col2:\"secunderabad\", col3:\"26-07-2021\", col4:18, col5:2009, col6:\"covaxin\"},\r\n        //         {id:4, col1:\"apollo\", col2:\"secunderabad\", col3:\"26-07-2021\", col4:18, col5:2009, col6:\"covaxin\"},\r\n        //         {id:5, col1:\"apollo\", col2:\"secunderabad\", col3:\"26-07-2021\", col4:18, col5:2009, col6:\"covaxin\"},\r\n        //         {id:6, col1:\"apollo\", col2:\"secunderabad\", col3:\"26-07-2021\", col4:18, col5:2009, col6:\"covaxin\"},\r\n        //         {id:7, col1:\"apollo\", col2:\"secunderabad\", col3:\"26-07-2021\", col4:18, col5:2009, col6:\"covaxin\"},\r\n        //         {id:8, col1:\"apollo\", col2:\"secunderabad\", col3:\"24-07-2021\", col4:18, col5:2009, col6:\"covaxin\"},\r\n        //         {id:9, col1:\"apollo\", col2:\"secunderabad\", col3:\"26-07-2021\", col4:18, col5:2009, col6:\"covaxin\"},\r\n        //         {id:10, col1:\"apollo\", col2:\"secunderabad\", col3:\"26-07-2021\", col4:18, col5:2009, col6:\"covaxin\"},\r\n        //         {id:11, col1:\"test\", col2:\"secunderabad\", col3:\"26-07-2021\", col4:18, col5:2009, col6:\"covaxin\"}\r\n        //   ]\r\n\r\n\r\n        //   res.map((item)=>\r\n\r\n        // for(let i=0;i<res.length;i++){\r\n        //     console.log(\"value \" + i)\r\n\r\n        //     rows  = [\r\n\r\n        //         {\r\n        //         id:i+1, \r\n        //         col1:res[i].name,\r\n        //         col2:res[i].address,\r\n        //         col3: [res[i].from, res[i].to],\r\n        //         col4: [res[i].fee_type, res[i].fee, res[i].min_age_limit],\r\n        //         col5: [res[i].available_capacity, res[i].available_capacity_dose1, res[i].available_capacity_dose2],\r\n        //         col6: res[i].vaccine\r\n\r\n        //         },\r\n                // rows[i] =RowsProp[i]\r\n            // ]\r\n            // this.setState({id:this.state.id+1})\r\n            // \r\n        // }\r\n        // console.log(\"after i \"+ rows[2].id)\r\n\r\n        // id:item.center_id, \r\n        // col1:item.name,\r\n        // col2:item.address,\r\n        // col3: [item.from, item.to],\r\n        // col4: [item.fee_type, item.fee, item.min_age_limit],\r\n        // col5: [item.available_capacity, item.available_capacity_dose1, item.available_capacity_dose2],\r\n        // col6: item.vaccine\r\n            // this.setState({this.state.id:this.state.id+1})\r\n            // )\r\n        \r\n            // console.log(\"rows data\" + rows)\r\n\r\n            // const rows = [\r\n\r\n           \r\n            // res.map(item=>`{ ${id: 1}, ${col1: item.name}, ${col2: item.address}, ${col3: item.from} | ${item.to}, ${col4: item.fee_type} | ${item.fee} | ${item.min_age_limit}, ${col5: item.available_capacity} | ${item.available_capacity_dose1} | ${item.available_capacity_dose2}, ${col6: item.vaccine}, },`)\r\n            \r\n           \r\n        //   ];\r\n\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n          } else {\r\n        \r\n        return (\r\n            <div>\r\n                        \r\n                <FormControl variant=\"outlined\" style={{minWidth: 240}}>\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Select State</InputLabel>\r\n                    \r\n                <Select\r\n                    native\r\n                    // value={state.age}\r\n                    onChange={this.stateHandleChange}\r\n                    label=\"Select State\"\r\n                    // inputProps={{\r\n                    //     name: \"age\",\r\n                    //     id: \"outlined-age-native-simple\"\r\n                    // }}\r\n                    >\r\n                    <option aria-label=\"None\" value=''/>\r\n\r\n                    {items.map(item=>(\r\n                                <option value={item.state_id}>{item.state_name}</option>\r\n                            ))}\r\n\r\n                    \r\n                    \r\n                    </Select>\r\n                    \r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={{minWidth: 240}}>\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Select District</InputLabel>\r\n                \r\n                <Select\r\n                  native\r\n                //   value={state.age}\r\n                  onChange={this.districtHandleChange}\r\n                  label=\"Select District\"\r\n                //   inputProps={{\r\n                //     name: \"age\",\r\n                //     id: \"outlined-age-native-simple\"\r\n                //   }}\r\n                >\r\n                    <option aria-label=\"None\" value={this.state.dValue}  />\r\n\r\n                    {distr.map(item=>(\r\n                                <option value={item.district_id}>{item.district_name}</option>\r\n                            ))}\r\n                    \r\n                    \r\n                    \r\n                    {/* <option value={10}>Ten</option>\r\n                    <option value={20}>Twenty</option>\r\n                    <option value={30}>Thirty</option> */}\r\n                </Select>\r\n                \r\n                </FormControl>\r\n                <div style={{marginTop:'15px', marginBottom:'15px'}}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.searchDist}>Search</Button>\r\n                </div>\r\n                {\r\n                    (res===undefined) ? <div> No vaccine slots available please come back later </div> :\r\n                \r\n\r\n                    <div>\r\n                    <table style={{width:'100%'}}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            Center Name\r\n                                        </th>\r\n                                        <th>\r\n                                            Address\r\n                                        </th>\r\n                                        <th>\r\n                                            From - To\r\n                                        </th>\r\n                                        <th>\r\n                                            FeeType | Fee | Min Age\r\n                                        </th>\r\n                                        <th>\r\n                                            Available | Dose1 | Dose2\r\n                                        </th>\r\n                                        <th>\r\n                                            Vaccine\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        res.map(item=>(\r\n                                            <tr>\r\n                                                <td>\r\n                                                    {item.name}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {item.address}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {item.from} - {item.to}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {item.fee_type} | {item.fee} | {item.min_age_limit}+\r\n                                                </td>\r\n                                                <td>\r\n                                                    {item.available_capacity} | {item.available_capacity_dose1} | {item.available_capacity_dose2}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {item.vaccine}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        ))\r\n                                        \r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                {/* <div style={{ height: 600, width: \"100%\" }}>\r\n                                    <DataGrid rows={rows} columns={columns} />\r\n                                </div> */}\r\n\r\n                                {/* {rows.map(item=>(\r\n                                <div style={{ height: 600, width: \"100%\" }}>\r\n                                    <DataGrid rows={item} columns={columns} />\r\n                                </div>\r\n                                ))} */}\r\n\r\n                                {/* {res.map((item, i)=>(\r\n                                <div style={{ height: 600, width: \"100%\" }}>\r\n                                    <DataGrid rows={\r\n                                        [{\r\n                                            id:i,\r\n                                            col1:item.name,\r\n                                            col2:item.address,\r\n                                            col3: [item.from, item.to],\r\n                                            col4: [item.fee_type, item.fee, item.min_age_limit],\r\n                                            col5: [item.available_capacity, item.available_capacity_dose1, item.available_capacity_dose2],\r\n                                            col6: item.vaccine\r\n                                        },\r\n                                    ]\r\n                                    }\r\n                                    columns={columns} />\r\n                                </div>))\r\n                                \r\n                                } */}\r\n\r\n\r\n\r\n                                {/* {res.map(item=>(\r\n                                    <div style={{marginBottom:'20px'}}>\r\n                                        <div>Center Name: {item.name}</div>\r\n                                        <div>Address: {item.address}</div>\r\n                                        <div>{item.vaccine}: {item.fee}</div>\r\n                                    </div>\r\n                                ))} */}\r\n                    </div>\r\n\r\n            \r\n            }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n}\r\n\r\nexport default SearchByDistrict\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SearchByPin from \"./SearchByPin\";\r\nimport SearchByDistrict from \"./SearchByDistrict\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Search By Pin\" {...a11yProps(0)} />\r\n          <Tab label=\"Search By District\" {...a11yProps(1)} />\r\n          {/* <Tab label=\"Item Three\" {...a11yProps(2)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <SearchByPin/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <SearchByDistrict/>\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={2}>\r\n        Item Three\r\n      </TabPanel> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n// export default TabPanel;\r\n","import './App.css';\n// import { Button } from '@material-ui/core';\n// import DataComponent from './DataComponent';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Cowin from './Cowin';\nimport SimpleTabs from './TabView';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <h1>Covid Vaccination slots search by pin or districts</h1>\n\n      {/* Button components used */}\n\n      {/* <Button variant=\"contained\">Default</Button>\n\n      <Button variant=\"contained\" color=\"primary\">\n        Primary\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\">\n        Secondary\n      </Button>\n      <Button variant=\"contained\" disabled>\n        Disabled\n      </Button>\n      <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n        Link\n      </Button> */}\n\n      {/* <DataComponent/> */}\n\n      {/* <Cowin/> */}\n      <SimpleTabs/>\n            \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}